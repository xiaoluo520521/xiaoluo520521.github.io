{"version":3,"sources":["webpack:///./src/assets/rain.mp4","webpack:///./src/views/Front/VideoDetail.vue","webpack:///./src/views/Front/VideoDetail.vue?31b8"],"names":["module","exports","class","style","ref","playsinline","options","playerOptions","name","components","videoPlayer","unmounted","mydate","Date","request","post","username","this","user","time","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","score","then","res","stream","tracks","getTracks","forEach","track","stop","mounted","navigator","mediaDevices","getUserMedia","video","$refs","srcObject","play","catch","error","console","data","playbackRates","autoplay","muted","loop","preload","language","aspectRatio","fluid","sources","type","src","poster","notSupportedMessage","controlBar","timeDivider","durationDisplay","remainingTimeDisplay","fullscreenToggle","created","sessionStorage","getItem","JSON","parse","methods","__exports__","render"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,2B,4DCElCC,MAAM,Q,GAMJC,MAAA,kB,GACIC,IAAI,S,qFARjB,eAaM,YAZJ,eASM,MATN,EASM,CARJ,eAIe,GAJDF,MAAM,mBACNE,IAAI,cACHC,aAAa,EACbC,QAAS,EAAAC,e,oBAExB,eAEM,MAFN,EAEM,CADJ,eAA2B,QAA3B,EAA2B,gB,gDAapB,GACbC,KAAM,cACNC,WAAY,CACVC,YAAA,QAEFC,UALa,WAMX,IAAIC,EAAO,IAAIC,KAGf,GAFAC,EAAA,KAAQC,KAAK,SAAU,CAACC,SAASC,KAAKC,KAAKF,SAASG,KAAKP,EAAOQ,cAAc,IAAIR,EAAOS,WAAW,IAAIT,EAAOU,UAAU,IAAIV,EAAOW,WAAW,IAAIX,EAAOY,aAAa,IAAIZ,EAAOa,aAAcC,MAAM,KAAKC,MAAK,SAAAC,OAE5MX,KAAKY,OAAQ,CACf,IAAMC,EAASb,KAAKY,OAAOE,YAC3BD,EAAOE,SAAQ,SAAAC,GAAI,OAAKA,EAAMC,UAC9BjB,KAAKY,OAAS,OAIlBM,QAhBa,WAgBH,WACRC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IACxCZ,MAAK,SAAAE,GACJ,IAAMU,EAAQ,EAAKC,MAAMD,MACzBA,EAAME,UAAYZ,EAClBU,EAAMG,OACN,EAAKb,OAASA,KAEfc,OAAM,SAAAC,GACLC,QAAQD,MAAM,4BAA6BA,OAInDE,KA7Ba,WA8BX,MAAO,CACL5B,KAAK,GAGLW,OAAO,KACPtB,cAAe,CACbwC,cAAe,CAAC,GAAK,EAAK,IAAK,GAC/BC,UAAU,EACVC,OAAO,EACPC,MAAM,EACNC,QAAS,OACTC,SAAU,QACVC,YAAa,OACbC,OAAO,EACPC,QAAS,CAAC,CACRC,KAAM,YACNC,IAAK,EAAQ,UAEfC,OAAQ,GACRC,oBAAqB,iBACrBC,WAAY,CACVC,aAAa,EACbC,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,MAK1BC,QA3Da,WA4DXhD,KAAKC,KAAOgD,eAAeC,QAAQ,QAAUC,KAAKC,MAAMH,eAAeC,QAAQ,SAAW,IAE5FG,QAAS,I,qBC/EX,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD","file":"js/chunk-040a79a2.b92dc712.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/rain.eb4a7546.mp4\";","<template>\n  <div>\n    <div class='demo'>\n      <video-player class=\"video-player-box\"\n                    ref=\"videoPlayer\"\n                    :playsinline=\"true\"\n                    :options=\"playerOptions\">\n      </video-player>\n      <div style=\"display: none\">\n        <video ref=\"video\"></video>\n      </div>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\nimport 'video.js/dist/video-js.css'\nimport { videoPlayer } from 'vue-video-player/src'\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"VideoDetail\",\n  components: {\n    videoPlayer\n  },\n  unmounted() {\n    let mydate=new Date()\n    request.post(\"/video\", {username:this.user.username,time:mydate.getFullYear()+\"-\"+mydate.getMonth()+\"-\"+mydate.getDate()+\" \"+mydate.getHours()+\":\"+mydate.getMinutes()+\":\"+mydate.getSeconds() ,score:40}).then(res => {\n    })\n    if (this.stream) {\n      const tracks = this.stream.getTracks();\n      tracks.forEach(track => track.stop());\n      this.stream = null;\n    }\n  },\n\n  mounted() {\n    navigator.mediaDevices.getUserMedia({ video: true })\n        .then(stream => {\n          const video = this.$refs.video;\n          video.srcObject = stream;\n          video.play();\n          this.stream = stream;\n        })\n        .catch(error => {\n          console.error('Could not access camera: ', error);\n        });\n  },\n\n  data() {\n    return {\n      user:{},\n      // id: this.$route.query.id,\n      // video: {},\n      stream:null,\n      playerOptions: {\n        playbackRates: [0.5, 1.0, 1.5, 2.0], // 可选的播放速度\n        autoplay: true, // 如果为true,浏览器准备好时开始回放。\n        muted: false, // 默认情况下将会消除任何音频。\n        loop: false, // 是否视频一结束就重新开始。\n        preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: 'zh-CN',\n        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        sources: [{\n          type: \"video/mp4\", // 类型\n          src: require('../../assets/rain.mp4') // url地址\n        }],\n        poster: '', // 封面地址\n        notSupportedMessage: '此视频暂无法播放，请稍后再试', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        controlBar: {\n          timeDivider: true, // 当前时间和持续时间的分隔符\n          durationDisplay: true, // 显示持续时间\n          remainingTimeDisplay: true, // 是否显示剩余时间功能\n          fullscreenToggle: true // 是否显示全屏按钮\n        }\n      }\n    }\n  },\n  created() {\n    this.user = sessionStorage.getItem(\"user\") ? JSON.parse(sessionStorage.getItem(\"user\")) : {};\n  },\n  methods: {\n\n\n  }\n}\n</script>\n\n<style>\n</style>\n","import { render } from \"./VideoDetail.vue?vue&type=template&id=8849095a\"\nimport script from \"./VideoDetail.vue?vue&type=script&lang=js\"\nexport * from \"./VideoDetail.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\BaiduNetdiskDownload\\\\springboot-vue-demo-master\\\\vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}